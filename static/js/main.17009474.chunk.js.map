{"version":3,"sources":["selectors.js","constants/actions.js","graphql/index.js","actions/index.js","hooks/useStartApp.js","constants/colors.js","constants/pieces.js","constants/visuals.js","components/Square.jsx","components/Board.jsx","hooks/usePieceSelected.js","hooks/useMoveInitiated.js","components/Log.jsx","hooks/useScrollToBottom.js","App.js","hooks/useAI.js","reducers/chess.js","reducers/appStatus.js","reducers/gameLog.js","reducers/ui.js","reducers/index.js","middleware/api.js","serviceWorker.js","index.js","middleware/log.js"],"names":["selectChess","state","chess","selectGameLog","gameLog","selectActiveSquare","selectedSquareId","ui","square","squares","find","id","moves","movesBySquare","targets","map","move","to","APP_STARTED","MOVE_INITIATED","CHESS_FRAGMENT","GET_CHESS","MAKE_MOVE","pieceSelected","squareId","type","moveInitiated","fen","query","variables","types","useStartApp","dispatch","useEffect","colors","WHITE","BLACK","colorsBySymbol","Map","Object","entries","key","USER_COLOR","AI_COLOR","pieces","PAWN","KNIGHT","BISHOP","ROOK","QUEEN","KING","piecesBySymbol","visuals","PIECES","COLORS","Square","piece","isDark","isActive","targetedBy","onClick","symbol","ariaLabel","classNames","push","PIECE_VISUALS","color","get","aria-label","aria-pressed","disabled","className","join","Board","useSelector","selectedSquare","useDispatch","useCallback","usePieceSelected","filter","from","promotion","useMoveInitiated","turn","isTurn","isTargeted","includes","Log","ref","useRef","current","scrollTop","scrollHeight","useScrollToBottom","role","aria-live","aria-atomic","gameEvent","index","dateTime","time","message","App","a","analysis","bestMove","Promise","resolve","setTimeout","performAiMove","useAI","mapChessDataToState","reduce","result","nextMove","movesForSquare","generateMovesBySquare","board","list","row","mappedRow","file","rank","generateSquares","initialState","loading","combineReducers","action","data","appStatus","errors","formatDate","Date","canceled","headers","Boolean","window","location","hostname","match","middleware","next","request","receive","failure","queryOptions","body","JSON","stringify","options","method","fetch","process","response","ok","json","Error","normalized","name","stack","store","log","getState","inCheckmate","inCheck","enhancers","composeWithDevTools","applyMiddleware","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.17009474.chunk.js","sourcesContent":["export function selectChess(state) {\n  return state.chess\n}\n\nexport function selectGameLog(state) {\n  return state.gameLog\n}\n\nexport function selectActiveSquare(state) {\n  const { selectedSquareId } = state.ui\n\n  if (!selectedSquareId) {\n    return null\n  }\n\n  const square = state.chess.squares.find(\n    (square) =>\n      square.id === selectedSquareId\n    )\n\n  const moves = state.chess.movesBySquare[square.id]\n  const targets = moves?.map(\n      (move) => move.to\n    )\n\n  return {\n    ...square,\n    targets\n  }\n}\n","export const CALL_API = 'CALL_API'\n\nexport const APP_STARTED = {\n  REQUEST: 'chess/REQUEST',\n  RECEIVE: 'chess/RECEIVE',\n  FAILURE: 'chess/FAILURE'\n}\n\nexport const MOVE_INITIATED = {\n  REQUEST: 'move/REQUEST',\n  RECEIVE: 'move/RECEIVE',\n  FAILURE: 'move/FAILURE'\n}\n\nexport const PIECE_SELECTED = 'PIECE_SELECTED'\n\nexport const EVENT_LOGGED = 'EVENT_LOGGED'\n","const CHESS_FRAGMENT = `\n  fragment ChessAttributes on Chess {\n      analysis {\n        bestMove {\n          from\n          to\n          flags\n        }\n        ponderMove {\n          from\n          to\n          flags\n        }\n      }\n      board {\n        rank\n        squares {\n          file\n          piece {\n            type\n            color\n          }\n        }\n      }\n      fen\n      gameOver\n      inCheck\n      inCheckmate\n      inDraw\n      inStalemate\n      insufficientMaterial\n      inThreefoldRepetition\n      moves {\n        color\n        from\n        to\n        promotion\n        flags\n      }\n      turn\n  }\n`\n\nexport const GET_CHESS = `\n  ${CHESS_FRAGMENT}\n  {\n    chess {\n      ... ChessAttributes\n    }\n  }\n`\n\nexport const MAKE_MOVE = `\n  ${CHESS_FRAGMENT}\n\n  mutation makeMove($fen: String!, $move: MoveObjectInput!){\n    chess: move (input: {\n      fen: $fen,\n      move: $move\n    }) {\n      ... ChessAttributes\n    }\n  }\n`\n","import {\n  CALL_API,\n  APP_STARTED,\n  PIECE_SELECTED,\n  MOVE_INITIATED\n} from '../constants/actions'\n\nimport {\n  GET_CHESS,\n  MAKE_MOVE\n} from '../graphql'\n\nexport function startApp() {\n  return {\n    [CALL_API]: {\n      query: GET_CHESS,\n      types: [\n        APP_STARTED.REQUEST,\n        APP_STARTED.RECEIVE,\n        APP_STARTED.FAILURE\n      ]\n    }\n  }\n}\n\nexport function pieceSelected(squareId) {\n  return { type: PIECE_SELECTED, squareId }\n}\n\nexport function moveInitiated(fen, move) {\n  return {\n    [CALL_API]: {\n      query: MAKE_MOVE,\n      variables: {\n        fen,\n        move\n      },\n      types: [\n        MOVE_INITIATED.REQUEST,\n        MOVE_INITIATED.RECEIVE,\n        MOVE_INITIATED.FAILURE\n      ]\n    }\n  }\n}\n","import { useEffect } from 'react';\nimport { startApp } from '../actions'\n\nexport default function useStartApp(dispatch) {\n  return useEffect(() => {\n    dispatch(startApp())\n  }, [dispatch])\n}\n","const colors = {\n  WHITE: 'w',\n  BLACK: 'b'\n}\n\nexport const colorsBySymbol =  new Map(\n  Object.entries(colors).map(\n    ([key, value]) => [value, key]\n  )\n)\n\nexport const USER_COLOR = colors.WHITE\nexport const AI_COLOR = colors.BLACK\n\nexport default colors\n","const pieces = {\n  PAWN: 'p',\n  KNIGHT: 'n',\n  BISHOP: 'b',\n  ROOK: 'r',\n  QUEEN: 'q',\n  KING: 'k'\n}\n\nexport const piecesBySymbol =  new Map(\n  Object.entries(pieces).map(\n    ([key, value]) => [value, key]\n  )\n)\n\nexport default pieces\n","import COLORS from './colors'\nimport PIECES from './pieces'\n\nconst visuals = {\n  [PIECES.KING]: {\n    [COLORS.BLACK]: '\\u265A',\n    [COLORS.WHITE]: '\\u2654'\n  },\n  [PIECES.QUEEN]: {\n    [COLORS.BLACK]: '\\u265B',\n    [COLORS.WHITE]: '\\u2655'\n  },\n  [PIECES.ROOK]: {\n    [COLORS.BLACK]: '\\u265C',\n    [COLORS.WHITE]: '\\u2656'\n  },\n  [PIECES.BISHOP]: {\n    [COLORS.BLACK]: '\\u265D',\n    [COLORS.WHITE]: '\\u2657'\n  },\n  [PIECES.KNIGHT]: {\n    [COLORS.BLACK]: '\\u265E',\n    [COLORS.WHITE]: '\\u2658'\n  },\n  [PIECES.PAWN]: {\n    [COLORS.BLACK]: '\\u265F',\n    [COLORS.WHITE]: '\\u2659'\n  }\n}\n\nexport default visuals\n","import React from 'react'\n\nimport PIECE_VISUALS from '../constants/visuals'\n\nimport { piecesBySymbol } from '../constants/pieces'\nimport COLORS, { colorsBySymbol } from '../constants/colors'\n\nexport default function Square({ squareId, piece, isDark, isActive, targetedBy, onClick }) {\n  let symbol = null\n  let ariaLabel = `${squareId} is empty`\n  let classNames = ['chess-board-square', `chess-board-square--${squareId}`]\n\n  if (isDark) {\n    classNames.push('chess-board-square--dark')\n  }\n\n  if (onClick) {\n    classNames.push('chess-board-square--clickable')\n  }\n\n  if (piece) {\n    symbol = PIECE_VISUALS[piece.type][piece.color]\n    ariaLabel =\n      `${squareId} contains a ${colorsBySymbol.get(piece.color)\n      } ${piecesBySymbol.get(piece.type)}`\n\n    if (piece.color === COLORS.BLACK) {\n      classNames.push('chess-board-square--black-piece')\n    }\n  }\n\n  if (isActive) {\n    classNames.push('chess-board-square--active')\n    ariaLabel =\n      `${squareId} contains a ${colorsBySymbol.get(piece.color)} ${piecesBySymbol.get(piece.type)\n      } selected for move. Use the tab keys to select a square to initiate move.${' '\n      } Press again to cancel selection.`\n  }\n\n  if (targetedBy) {\n    classNames.push('chess-board-square--targeted')\n    ariaLabel =\n      `Move ${piecesBySymbol.get(targetedBy.piece.type)} on ${targetedBy.id} ${\n      piece ? `to capture ${piecesBySymbol.get(piece.type)} on ${squareId}` : `to ${squareId}`\n    }`\n  }\n\n  return (\n    <button\n      type=\"button\"\n      aria-label={ariaLabel}\n      aria-pressed={isActive}\n      disabled={!onClick}\n      className={classNames.join(' ')}\n      onClick={() => onClick(squareId)}>\n      {symbol}\n    </button>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectActiveSquare,\n  selectChess\n} from '../selectors'\n\nimport COLORS, {\n  USER_COLOR\n} from '../constants/colors'\n\nimport usePieceSelected from '../hooks/usePieceSelected'\nimport useMoveInitiated from '../hooks/useMoveInitiated'\nimport Square from './Square'\n\nexport default function Board() {\n  const chess = useSelector(selectChess)\n  const selectedSquare = useSelector(selectActiveSquare)\n\n  const dispatch = useDispatch()\n  const pieceSelected = usePieceSelected(dispatch)\n  const moveInitiated = useMoveInitiated(dispatch, chess, selectedSquare)\n\n  if (!chess) {\n    return <div className=\"chess-board--loading\"/>\n  }\n\n  const classNames= ['chess-board']\n\n  if (chess.turn === COLORS.BLACK) {\n    classNames.push('chess-board--black-turn')\n  }\n\n  return (\n    <div className={classNames.join(' ')}>\n      {chess.squares.map(({ id: squareId, piece, isDark }) => {\n        const isActive = (\n          squareId === selectedSquare?.id\n        )\n\n        const isTurn = (\n          chess.turn == USER_COLOR\n        )\n\n        const isTargeted = (\n          selectedSquare?.targets?.includes(squareId)\n        )\n\n        const targetedBy = (\n          isTargeted ? selectedSquare : null\n        )\n\n        const onClick = isTurn ? (\n          isTargeted ? moveInitiated : (\n              piece ? pieceSelected : null\n            )\n          ) : null\n\n        return (\n          <Square\n            key={squareId}\n            piece={piece}\n            squareId={squareId}\n            isDark={isDark}\n            isActive={isActive}\n            targetedBy={targetedBy}\n            onClick={onClick}/>\n        )\n      })}\n    </div>\n  )\n}\n","import { useCallback } from 'react'\n\nimport {\n  pieceSelected\n} from '../actions'\n\nexport default function usePieceSelected(dispatch) {\n  return useCallback(\n    (squareId) =>\n      dispatch(\n        pieceSelected(squareId)\n      )\n    , [dispatch]\n  )\n}\n","import { useCallback } from 'react'\n\nimport PIECES from '../constants/pieces'\n\nimport {\n  moveInitiated\n} from '../actions'\n\nexport default function useMoveInitiated(dispatch, chess, selectedSquare) {\n  return useCallback(\n    (squareId) => {\n      let { from, to, promotion } = chess.moves\n        .filter(\n          (move) => move.from === selectedSquare.id\n        ).find(\n          (move) => move.to === squareId\n        )\n\n      if (promotion) {\n        promotion = PIECES.QUEEN\n      }\n\n      dispatch(\n        moveInitiated(chess.fen, { from, to, promotion })\n      )\n    }, [dispatch, chess, selectedSquare]\n  )\n}\n","import React, { useRef } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { selectGameLog } from '../selectors'\nimport useScrollToBottom from '../hooks/useScrollToBottom'\n\n// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_log_role\nexport default function Log(){\n  const gameLog = useSelector(selectGameLog)\n  const ref = useRef(null)\n\n  useScrollToBottom(ref, gameLog)\n\n  return (\n    <div ref={ref} className=\"console\" role=\"log\">\n      <ul className=\"console-output\" aria-live=\"polite\" aria-atomic=\"false\">\n        {gameLog?.map((gameEvent, index) =>\n          <li key={index} className=\"console-output-item\">\n            [<time dateTime={gameEvent.time}>{gameEvent.time}</time>] {gameEvent.message}\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n","import { useEffect } from 'react'\n\nexport default function useScrollToBottom(ref, state) {\n  return useEffect(() => {\n    ref.current.scrollTop = ref.current.scrollHeight\n  }, [ref, state])\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectChess } from './selectors'\nimport useStartApp from './hooks/useStartApp'\nimport useAI from './hooks/useAI'\nimport Board from './components/Board'\nimport Log from './components/Log'\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const chess = useSelector(selectChess)\n\n  useStartApp(dispatch)\n  useAI(dispatch, chess)\n\n  return (\n    <>\n      <Board/>\n      <Log/>\n    </>\n  );\n}\n","import { useEffect } from 'react'\n\nimport {\n  AI_COLOR\n} from '../constants/colors'\n\nimport PIECES from '../constants/pieces'\n\nimport {\n  pieceSelected,\n  moveInitiated\n} from '../actions'\n\nconst AI_MOVE_DELAY = 1000\n\nexport default function useAI(dispatch, chess) {\n  return useEffect(() => {\n    async function performAiMove() {\n      const {\n        fen,\n        moves,\n        analysis\n      } = chess\n\n      let move = null\n\n      if (!analysis?.bestMove) {\n        move = moves[0]\n      } else {\n        // @todo bestMove doesn't include the promotion flag, so we grab\n        // the corresponding move from the moves array\n        const { bestMove } = analysis\n        move = moves.find(\n          move => move.from === bestMove.from && move.to === bestMove.to\n        )\n      }\n\n      let { from, to, promotion } = move\n\n      if (promotion) {\n        // Disable under-promoting\n        promotion = PIECES.QUEEN\n      }\n\n      dispatch(pieceSelected(from))\n\n      await new Promise(resolve => setTimeout(resolve, AI_MOVE_DELAY))\n\n      dispatch(\n        moveInitiated(fen, { from, to, promotion })\n      )\n    }\n\n    if (chess?.turn === AI_COLOR) {\n      performAiMove()\n    }\n\n  }, [dispatch, chess])\n}\n","import {\n  APP_STARTED,\n  MOVE_INITIATED\n} from '../constants/actions'\n\nconst initialState = null\n\nconst generateMovesBySquare = (state) => {\n  return state.moves\n    .reduce((result, nextMove) => {\n      const movesForSquare = result[nextMove.from] || []\n      return {\n        ...result,\n        [nextMove.from]: [...movesForSquare, nextMove]\n      }\n    }, {})\n}\n\nconst generateSquares = (state) => {\n  return state.board.reduce(\n      (list, row) => {\n        const mappedRow = row.squares.map(\n          (square, index) => ({\n            piece: square.piece,\n            id: `${square.file}${row.rank}`,\n            isDark: row.rank % 2 ? !(index % 2) : index % 2\n          })\n        )\n        return [ ...list, ...mappedRow ]\n      },\n    [])\n}\n\nconst mapChessDataToState = (state) => {\n  const movesBySquare = generateMovesBySquare(state)\n  const squares = generateSquares(state)\n\n  return {\n    ...state,\n    squares,\n    movesBySquare\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case APP_STARTED.RECEIVE:\n    case MOVE_INITIATED.RECEIVE: {\n      return mapChessDataToState(action.data.chess)\n    }\n\n    default:\n      return state\n  }\n}\n","import {\n  APP_STARTED,\n  MOVE_INITIATED\n} from '../constants/actions'\n\nconst initialState = {\n  loading: true\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case APP_STARTED.REQUEST: {\n      return { loading: true }\n    }\n\n    case APP_STARTED.RECEIVE: {\n      return { loading: false }\n    }\n\n    case MOVE_INITIATED.RECEIVE: {\n      return { loading: false }\n    }\n\n    case APP_STARTED.FAILURE: {\n      return { loading: false, errors: action.errors }\n    }\n\n    default:\n      return state\n  }\n}\n","import formatDate from 'date-fns/format'\n\nimport {\n  EVENT_LOGGED\n} from '../constants/actions'\n\nconst initialState = []\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case EVENT_LOGGED: {\n      return [\n        ...state,\n        {\n          time: formatDate(new Date(), 'HH:mm:ss'),\n          message: action.data\n        }\n      ]\n    }\n\n    default:\n      return state\n  }\n}\n","import {\n  PIECE_SELECTED,\n  MOVE_INITIATED\n} from '../constants/actions'\n\nconst initialState = {\n  selectedSquareId: null\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case PIECE_SELECTED: {\n      const canceled = (\n        action.squareId === state.selectedSquareId\n      )\n\n      return {\n        selectedSquareId: canceled ? null : action.squareId\n      }\n    }\n\n    case MOVE_INITIATED.RECEIVE: {\n      return { selectedSquareId: null }\n    }\n\n    default:\n      return state\n  }\n}\n","import {\n  combineReducers\n} from 'redux'\n\nimport chess from './chess'\nimport appStatus from './appStatus'\nimport gameLog from './gameLog'\nimport ui from './ui'\n\nexport default combineReducers({\n  chess,\n  appStatus,\n  gameLog,\n  ui\n})\n","import {\n  CALL_API\n} from '../constants/actions'\n\nconst serverUrl = process.env.REACT_APP_API\nconst method = 'POST'\nconst headers =  {\n  'Content-Type': 'application/json'\n}\n\nexport default () => next => async action => {\n  if (!action[CALL_API]) {\n    return next(action)\n  }\n\n  const {\n    query,\n    variables,\n    types: [request, receive, failure]\n  } = action[CALL_API]\n\n  const queryOptions = { query, variables }\n  const body = JSON.stringify(queryOptions)\n  const options = { method, headers, body }\n\n  next({\n    type: request,\n    data: { query, variables }\n  })\n\n  try {\n    const response = await fetch(serverUrl, options)\n\n    if (response.ok) {\n      const json = await response.json()\n      const { data, errors } = json\n\n      if (data) {\n        next({ type: receive, data })\n      }\n\n      if (errors) {\n        next({ type: failure, errors })\n      }\n    } else {\n      throw new Error('Response not ok')\n    }\n  } catch(error) {\n    let normalized = error\n    if (error instanceof Error) {\n      normalized = {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      }\n    }\n    next({ type: failure, errors: [normalized] })\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// import '98.css'\nimport './style/index.css';\nimport './style/breakpoints.css';\nimport './style/spinner.css';\n\nimport App from './App';\nimport reducers from './reducers'\nimport api from './middleware/api'\nimport log from './middleware/log'\nimport * as serviceWorker from './serviceWorker';\n\nconst middleware = [api, log]\nconst enhancers = composeWithDevTools(applyMiddleware(...middleware))\nconst store = createStore(reducers, enhancers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { piecesBySymbol } from '../constants/pieces'\nimport { colorsBySymbol } from '../constants/colors'\n\nimport {\n  APP_STARTED,\n  MOVE_INITIATED,\n  EVENT_LOGGED\n} from '../constants/actions'\n\nexport default store => next => async action => {\n  const log = (data) => {\n    store.dispatch({ type: EVENT_LOGGED, data })\n  }\n\n  switch (action.type) {\n    case APP_STARTED.REQUEST: {\n      log('Initializing game...')\n      break\n    }\n\n    case APP_STARTED.RECEIVE: {\n      log('Game ready')\n      break\n    }\n\n    case APP_STARTED.FAILURE: {\n      log('Failed to start game')\n      break\n    }\n\n    case MOVE_INITIATED.REQUEST: {\n      const { move } = action.data.variables\n      const state = store.getState()\n\n      const from = state.chess.squares.find(\n        (square) => square.id === move.from\n      )\n\n      const to = state.chess.squares.find(\n        (square) => square.id === move.to\n      )\n\n      let message = null\n\n      if (to.piece) {\n        message = `\n          ${colorsBySymbol.get(from.piece.color)} ${piecesBySymbol.get(from.piece.type)\n          } on ${from.id} captures ${piecesBySymbol.get(to.piece.type)} on ${to.id}`\n      } else {\n        message = `\n          ${colorsBySymbol.get(from.piece.color)} ${piecesBySymbol.get(from.piece.type)\n          } moves from ${from.id} to ${to.id}`\n      }\n\n      log(message)\n      break\n    }\n\n    case MOVE_INITIATED.RECEIVE: {\n      const { chess } = action.data\n\n      if (chess.inCheckmate) {\n        log(`${colorsBySymbol.get(chess.turn)} is in checkmate`)\n      } else if (chess.inCheck) {\n        log(`${colorsBySymbol.get(chess.turn)} is in check`)\n      }\n\n      break\n    }\n\n    default:\n      break\n  }\n\n  next(action)\n}\n"],"sourceRoot":""}