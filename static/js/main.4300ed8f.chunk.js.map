{"version":3,"sources":["constants/index.js","graphql/index.js","actions/index.js","components/Square.jsx","components/Piece.jsx","components/Board.jsx","components/Spinner.jsx","App.js","reducers/appStatus.js","reducers/chess.js","reducers/ui.js","reducers/index.js","reducers/constants.js","middleware/api.js","serviceWorker.js","index.js","middleware/ai.js"],"names":["CHESS_AND_CONSTANTS","MOVE","KEYS","PIECE_VISUALS","AI_COLOR","CHESS_FRAGMENT","GET_CONSTANTS_AND_CHESS","MAKE_MOVE","moveInitiated","fen","move","query","variables","types","Square","dark","isActive","isTargeted","onClick","ariaLabel","children","classNames","push","type","aria-label","disabled","className","join","BLACK","Piece","typeName","colorName","visual","role","Board","dispatch","useDispatch","chess","useSelector","state","constants","ui","piecesBySymbol","colorsBySymbol","pieceConstants","selectedSquareId","squares","movesBySquare","movesForSelection","targets","Set","map","to","rank","file","piece","squareId","moves","pieceTitle","color","toLowerCase","length","pieceSelected","has","find","from","promotion","props","key","Spinner","appStatus","loading","App","useEffect","initialState","mapChessDataToState","reduce","result","nextMove","movesForSquare","generateMovesBySquare","board","list","squareData","index","concat","generateSquares","combineReducers","action","errors","data","colorConstants","flagConstants","Object","entries","symbol","headers","Boolean","window","location","hostname","match","middleware","next","a","request","receive","failure","queryOptions","body","JSON","stringify","options","method","fetch","process","response","ok","json","Error","normalized","name","message","stack","store","getState","turn","analysis","bestMove","enhancers","composeWithDevTools","applyMiddleware","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4300ed8f.chunk.js","sourcesContent":["export const CALL_API = 'CALL_API'\n\nexport const CHESS_AND_CONSTANTS = {\n  REQUEST: 'chess-and-constants/REQUEST',\n  RECEIVE: 'chess-and-constants/RECEIVE',\n  FAILURE: 'chess-and-constants/FAILURE'\n}\n\nexport const MOVE = {\n  REQUEST: 'move/REQUEST',\n  RECEIVE: 'move/RECEIVE',\n  FAILURE: 'move/FAILURE'\n}\n\nexport const PIECE_SELECTED = 'PIECE_SELECTED'\n\nexport const KEYS = {\n  BLACK: 'BLACK',\n  WHITE: 'WHITE',\n  KING: 'KING',\n  QUEEN: 'QUEEN',\n  ROOK: 'ROOK',\n  BISHOP: 'BISHOP',\n  KNIGHT: 'KNIGHT',\n  PAWN: 'PAWN',\n  FLAGS: 'FLAGS'\n}\n\nexport const PIECE_VISUALS = {\n  [KEYS.KING]: {\n    [KEYS.BLACK]: '\\u265A',\n    [KEYS.WHITE]: '\\u2654'\n  },\n  [KEYS.QUEEN]: {\n    [KEYS.BLACK]: '\\u265B',\n    [KEYS.WHITE]: '\\u2655'\n  },\n  [KEYS.ROOK]: {\n    [KEYS.BLACK]: '\\u265C',\n    [KEYS.WHITE]: '\\u2656'\n  },\n  [KEYS.BISHOP]: {\n    [KEYS.BLACK]: '\\u265D',\n    [KEYS.WHITE]: '\\u2657'\n  },\n  [KEYS.KNIGHT]: {\n    [KEYS.BLACK]: '\\u265E',\n    [KEYS.WHITE]: '\\u2658'\n  },\n  [KEYS.PAWN]: {\n    [KEYS.BLACK]: '\\u265F',\n    [KEYS.WHITE]: '\\u2659'\n  }\n}\n\nexport const USER_COLOR = KEYS.WHITE\nexport const AI_COLOR = KEYS.BLACK\n","const CHESS_FRAGMENT = `\n  fragment ChessAttributes on Chess {\n      analysis {\n        bestMove {\n          from\n          to\n          flags\n        }\n        ponderMove {\n          from\n          to\n          flags\n        }\n      }\n      board {\n        rank\n        squares {\n          file\n          piece {\n            type\n            color\n          }\n        }\n      }\n      fen\n      gameOver\n      inCheck\n      inCheckmate\n      inDraw\n      inStalemate\n      insufficientMaterial\n      inThreefoldRepetition\n      moves {\n        color\n        from\n        to\n        promotion\n        flags\n      }\n      turn\n  }\n`\n\nexport const GET_CONSTANTS_AND_CHESS = `\n  ${CHESS_FRAGMENT}\n\n  fragment ColorConstants on Constants {\n    BLACK\n    WHITE\n  }\n\n  fragment PieceConstants on Constants {\n    BISHOP\n    KING\n    KNIGHT\n    PAWN\n    QUEEN\n    ROOK\n  }\n\n  fragment FlagConstants on Constants {\n    FLAGS {\n      NORMAL\n      CAPTURE\n      BIG_PAWN\n      EP_CAPTURE\n      PROMOTION\n      KSIDE_CASTLE\n      QSIDE_CASTLE\n    }\n  }\n\n  {\n    chess {\n      ... ChessAttributes\n    }\n\n    colorConstants: constants {\n      ... ColorConstants\n    }\n\n    pieceConstants: constants {\n      ... PieceConstants\n    }\n\n    flagConstants: constants {\n      ... FlagConstants\n    }\n  }\n`\n\nexport const MAKE_MOVE = `\n  ${CHESS_FRAGMENT}\n\n  mutation makeMove($fen: String!, $move: MoveObjectInput!){\n    chess: move (input: {\n      fen: $fen,\n      move: $move\n    }) {\n      ... ChessAttributes\n    }\n  }\n`\n","import {\n  CALL_API,\n  CHESS_AND_CONSTANTS,\n  PIECE_SELECTED,\n  MOVE\n} from '../constants'\n\nimport {\n  GET_CONSTANTS_AND_CHESS,\n  MAKE_MOVE\n} from '../graphql'\n\nexport function startApp() {\n  return {\n    [CALL_API]: {\n      query: GET_CONSTANTS_AND_CHESS,\n      types: [\n        CHESS_AND_CONSTANTS.REQUEST,\n        CHESS_AND_CONSTANTS.RECEIVE,\n        CHESS_AND_CONSTANTS.FAILURE\n      ]\n    }\n  }\n}\n\nexport function pieceSelected(squareId) {\n  return { type: PIECE_SELECTED, squareId }\n}\n\nexport function moveInitiated(fen, move) {\n  return {\n    [CALL_API]: {\n      query: MAKE_MOVE,\n      variables: {\n        fen,\n        move\n      },\n      types: [\n        MOVE.REQUEST,\n        MOVE.RECEIVE,\n        MOVE.FAILURE\n      ]\n    }\n  }\n}\n","import React from 'react'\n\nexport default function Square({\n  dark,\n  isActive,\n  isTargeted,\n  onClick,\n  ariaLabel,\n  children\n}) {\n\n  let classNames = ['chess-board-square']\n\n  if (dark) {\n    classNames.push('chess-board-square--dark')\n  }\n\n  if (isTargeted) {\n    classNames.push('chess-board-square--targeted')\n  }\n\n  if (isActive) {\n    classNames.push('chess-board-square--active')\n  }\n\n  return (\n    <button\n      type=\"button\"\n      aria-label={ariaLabel}\n      disabled={!onClick}\n      className={classNames.join(' ')}\n      onClick={onClick}>\n      {children}\n    </button>\n  )\n}\n","import React from 'react'\n\nimport {\n  PIECE_VISUALS,\n  KEYS\n} from '../constants'\n\nconst {\n  BLACK\n} = KEYS\n\nexport default function Piece({ typeName, colorName }) {\n  const visual = PIECE_VISUALS[typeName][colorName]\n  const className = `chess-board-piece${\n    colorName === BLACK ? ' chess-board-piece--black' : ''\n  }`\n\n  return (\n    <span role=\"presentation\" className={className}>{visual}</span>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  moveInitiated,\n  pieceSelected\n} from '../actions'\n\nimport {\n  KEYS\n} from '../constants'\n\nimport Square from './Square'\nimport Piece from './Piece'\n\nexport default function Board() {\n  const dispatch = useDispatch()\n  const chess = useSelector(state => state.chess)\n  const constants = useSelector(state => state.constants)\n  const ui = useSelector(state => state.ui)\n\n  if (!chess) {\n    return null\n  }\n\n  const {\n    piecesBySymbol,\n    colorsBySymbol,\n    pieceConstants\n  } = constants\n\n  const {\n    selectedSquareId\n  }  = ui\n\n  const {\n    fen,\n    squares,\n    movesBySquare\n  } = chess\n\n  let movesForSelection = null\n  let targets = null\n\n  if (selectedSquareId) {\n    movesForSelection = movesBySquare[selectedSquareId]\n    targets = new Set(\n      movesForSelection.map(move => move.to)\n    )\n  }\n\n  return (\n    <div className=\"chess-board\">\n      {squares.map(({ rank, file, piece, dark }) => {\n        const squareId = `${file}${rank}`\n\n        let moves = null\n        let typeName = null\n        let colorName = null\n        let isTargeted = false\n        let isActive = false\n        let onClick = null\n        let ariaLabel = `${squareId} is empty`\n        let pieceTitle = null\n\n        if (piece) {\n          typeName = piecesBySymbol[piece.type]\n          colorName = colorsBySymbol[piece.color]\n          pieceTitle = `${colorName} ${typeName}`.toLowerCase()\n          moves = movesBySquare[squareId]\n          ariaLabel = `${squareId} contains a ${pieceTitle}`\n\n          if (moves?.length > 0) {\n            onClick = () => dispatch(pieceSelected(squareId))\n          }\n        }\n\n        if (selectedSquareId) {\n          if (squareId === selectedSquareId) {\n            isActive = true\n            ariaLabel = `${squareId} contains a ${pieceTitle} selected for move.${' '\n            } Use the tab keys to select a square to initiate move.${' '\n            } Press again to cancel selection.`\n          } else if (targets?.has(squareId)) {\n            isTargeted = true\n            ariaLabel = `Move to ${squareId}`\n            onClick = () => {\n              let { from, to, promotion } = movesForSelection\n                .find(move => move.to === squareId)\n\n              if (promotion) {\n                promotion = pieceConstants[KEYS.QUEEN]\n              }\n\n              const move = { from, to, promotion }\n              dispatch(moveInitiated(fen, move))\n            }\n          } else {\n            // @todo Forcing onClick to null is helpful so that you can\n            // tab to initiate moves, but it's confusing that you have\n            // to unselect the active piece before selecting a new piece.\n            // onClick = null\n          }\n        }\n\n        const props = {\n          key: squareId,\n          dark,\n          isActive,\n          isTargeted,\n          ariaLabel,\n          onClick\n        }\n\n        return (\n          <Square {...props}>\n            {piece && (\n              <Piece typeName={typeName} colorName={colorName}/>\n            )}\n          </Square>\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function Spinner() {\n  const appStatus = useSelector(state => state.appStatus)\n\n  const {\n    loading\n  } = appStatus\n\n  if (!loading) {\n    return null\n  }\n\n  return (\n    <div className=\"spinner\">\n      <div className=\"spinner-icon\"></div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\n\nimport Board from './components/Board'\nimport Spinner from './components/Spinner'\nimport { startApp } from './actions'\n\nexport default function App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(startApp())\n  }, [dispatch])\n\n  return (\n    <>\n      <Board/>\n      <Spinner/>\n    </>\n  );\n}\n","import {\n  CHESS_AND_CONSTANTS,\n  MOVE\n} from '../constants'\n\nconst initialState = {\n  loading: true\n}\n\nexport default function appStatus(state = initialState, action) {\n  switch (action.type) {\n    case CHESS_AND_CONSTANTS.REQUEST:\n    case MOVE.REQUEST:\n      return { loading: true }\n\n    case MOVE.RECEIVE:\n    case CHESS_AND_CONSTANTS.RECEIVE:\n      return { loading: false }\n\n    case CHESS_AND_CONSTANTS.FAILURE:\n      return { loading: false, errors: action.errors }\n\n    default:\n      return state\n  }\n}\n","import {\n  CHESS_AND_CONSTANTS,\n  MOVE\n} from '../constants'\n\nfunction generateMovesBySquare(chess) {\n  return chess.moves\n    .reduce((result, nextMove) => {\n      const movesForSquare = result[nextMove.from] || []\n      return {\n        ...result,\n        [nextMove.from]: [...movesForSquare, nextMove]\n      }\n    }, {})\n}\n\nfunction generateSquares(chess) {\n  return chess.board\n    .reduce((list, { rank, squares }) => {\n        const  squareData = squares\n          .map(({ file, piece }, index) => {\n            const dark = rank % 2 ? !(index % 2) : index % 2\n            return { rank, file, piece, dark }\n          })\n        return list.concat(squareData)\n      }, [])\n}\n\nfunction mapChessDataToState(chess) {\n  const movesBySquare = generateMovesBySquare(chess)\n  const squares = generateSquares(chess)\n\n  return {\n    ...chess,\n    squares,\n    movesBySquare\n  }\n}\n\nexport default function chess(state = null, action) {\n  switch (action.type) {\n    case CHESS_AND_CONSTANTS.RECEIVE:\n    case MOVE.RECEIVE:\n      return mapChessDataToState(action.data.chess)\n\n    default:\n      return state\n  }\n}\n","import {\n  PIECE_SELECTED,\n  MOVE\n} from '../constants'\n\nconst initialState = {\n  selectedSquareId: null\n}\n\nexport default function userInteractions(state = initialState, action) {\n  switch (action.type) {\n    case PIECE_SELECTED: {\n      const selectedSquareId = action.squareId\n\n      if (selectedSquareId === state.selectedSquareId) {\n        return { ...state, selectedSquareId: null }\n      }\n\n      return { ...state, selectedSquareId }\n    }\n\n    case MOVE.RECEIVE: {\n      return { ...state, selectedSquareId: null }\n    }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport appStatus from './appStatus'\nimport chess from './chess'\nimport constants from './constants'\nimport ui from './ui'\n\nexport default combineReducers({\n  appStatus, chess, constants, ui\n})\n","import {\n  CHESS_AND_CONSTANTS\n} from '../constants'\n\nexport default function constants(state = null, action) {\n  switch (action.type) {\n    case CHESS_AND_CONSTANTS.RECEIVE: {\n      const {\n        pieceConstants,\n        colorConstants,\n        flagConstants\n      } = action.data\n\n      const piecesBySymbol = Object.entries(pieceConstants).reduce(\n        (result, [typeName, symbol]) => {\n          return {\n            [symbol]: typeName,\n            ...result\n          }\n        }\n      , {})\n\n      const colorsBySymbol = Object.entries(colorConstants).reduce(\n        (result, [colorName, symbol]) => {\n          return {\n            [symbol]: colorName,\n            ...result\n          }\n        }\n      , {})\n\n      return {\n        piecesBySymbol,\n        colorsBySymbol,\n        pieceConstants,\n        colorConstants,\n        flagConstants\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import {\n  CALL_API\n} from '../constants'\n\nconst serverUrl = process.env.REACT_APP_API\nconst method = 'POST'\nconst headers =  {\n  'Content-Type': 'application/json'\n}\n\nexport default () => next => async action => {\n  if (!action[CALL_API]) {\n    return next(action)\n  }\n\n  const {\n    query,\n    variables,\n    types: [request, receive, failure]\n  } = action[CALL_API]\n\n  const queryOptions = { query, variables }\n  const body = JSON.stringify(queryOptions)\n  const options = { method, headers, body }\n\n  next({\n    type: request,\n    data: { query, variables }\n  })\n\n  try {\n    const response = await fetch(serverUrl, options)\n\n    if (response.ok) {\n      const json = await response.json()\n      const { data, errors } = json\n\n      if (data) {\n        next({ type: receive, data })\n      }\n\n      if (errors) {\n        next({ type: failure, errors })\n      }\n    } else {\n      throw new Error('Response not ok')\n    }\n  } catch(error) {\n    let normalized = error\n    if (error instanceof Error) {\n      normalized = {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      }\n    }\n    next({ type: failure, errors: [normalized] })\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// import '98.css'\nimport './style/index.css';\nimport './style/breakpoints.css';\nimport './style/spinner.css';\n\nimport App from './App';\nimport reducers from './reducers'\nimport api from './middleware/api'\nimport ai from './middleware/ai'\nimport * as serviceWorker from './serviceWorker';\n\nconst middleware = [api, ai]\nconst enhancers = composeWithDevTools(applyMiddleware(...middleware))\nconst store = createStore(reducers, enhancers)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  MOVE,\n  AI_COLOR\n} from '../constants'\n\nimport {\n  moveInitiated\n} from '../actions'\n\nexport default store => next => action => {\n  next(action)\n\n  if (action.type === MOVE.RECEIVE) {\n    const {\n      constants: {\n        colorConstants\n      },\n      chess: {\n        fen,\n        turn,\n        analysis: {\n          bestMove: { from, to } // todo check for promotion flag\n        }\n      }\n    } = store.getState()\n\n    if (turn === colorConstants[AI_COLOR]) {\n      store.dispatch(moveInitiated(fen, { from, to }))\n    }\n  }\n}\n"],"sourceRoot":""}